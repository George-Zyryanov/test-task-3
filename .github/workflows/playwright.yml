name: ðŸ§ª Test Task Tests
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
    - name: Run Playwright tests
      run: npx playwright test --project=chromium
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: playwright-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Verify Report URL
        id: verify-url
        run: |
          if [ -z "${{ steps.deployment.outputs.page_url }}" ]; then
            echo "::error::Failed to get report URL"
            exit 1
          fi
          echo "REPORT_URL=${{ steps.deployment.outputs.page_url }}" >> $GITHUB_ENV

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const reportUrl = process.env.REPORT_URL || '${{ needs.deploy.outputs.page_url }}';
            if (!reportUrl) {
              console.error('Report URL is not available');
              return;
            }
            const comment = `## ðŸ§ª Playwright Test Report\n\nTest run completed! View the full report here: ${reportUrl}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      - name: Create Summary
        uses: actions/github-script@v7
        with:
          script: |
            const reportUrl = process.env.REPORT_URL || '${{ needs.deploy.outputs.page_url }}';
            if (!reportUrl) {
              console.error('Report URL is not available');
              return;
            }
            
            // Add to Actions Summary
            await core.summary
              .addHeading('Playwright Test Report')
              .addLink('View Full Report', reportUrl)
              .addBreak()
              .addDetails('Test Details', `
                - Repository: ${context.repo.owner}/${context.repo.repo}
                - Branch: ${context.ref}
                - Commit: ${context.sha}
                - Report URL: ${reportUrl}
              `)
              .write();

